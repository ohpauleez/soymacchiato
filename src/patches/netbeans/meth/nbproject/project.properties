annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.run.all.processors=true
#
# Some of these probably need to be pre-defined, in ../build.properties:
#
file.reference.projects-folder=${user.home}/Projects
  file.reference.openjdk-jdk7-folder=${file.reference.projects-folder}/hotspot/jdk7-integration
  file.reference.davinci-project-folder=${file.reference.projects-folder}/davinci

# e.g., ln -s ...davinci/sources/build/bsd-i586/j2sdk-image ~/env/JAVA7X_HOME
file.reference.env-folder=${user.home}/env
javac.processorpath=\
    ${javac.classpath}
  libs.junit_4.classpath=${file.reference.env-folder}/JUNIT4_JAR
  platforms.JDK_7X.home=${file.reference.env-folder}/JAVA7X_HOME

# Possible overrides:
#file.reference.davinci-project-folder.sources.jdk=${file.reference.openjdk-jdk7-folder}/jdk/src/share/classes

# The mosh pit:
application.args=
application.title=MethodHandle
application.vendor=Oracle
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.tab-size=8
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.text-limit-width=80
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.usedProfile=default
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form,**/*.orig,**/*.rej,**/Unmanaged/**
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/meth.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=**/Unmanaged/**
#excludes=jdk/java/dyn/*Dynamic*
#excludes=java/dyn/Anonymous*.java,java/dyn/*ConstantPool*.java,jdk/java/dyn/Anonymous*.java,links/**
#file.reference.bsd-i586-classes=../davinci/sources/build/bsd-i586/classes
file.reference.test-classes=build/test/classes
file.reference.jdk-tests=${file.reference.davinci-project-folder.sources.jdk}/test
includes=java/dyn/**/*.java,sun/dyn/**/*.java,test/java/dyn/**/*.java,java/lang/invoke/**/*.java,sun/invoke/**/*.java,test/java/lang/invoke/**/*.java,java/lang/BootstrapMethodError.java,java/lang/ClassValue.java,java/lang/IllegalAccessException.java,java/lang/NoSuchMethodException.java,java/lang/NoSuchFieldException.java
#includes=**
jar.compress=true
javac.classpath=
#    ${file.reference.bsd-i586-classes}
# Space-separated list of extra javac options
javac.compilerargs= -Xbootclasspath/p:${build.classes.dir} -Xlint:none ${javac.standalone.bcp}
# assuming full JDK_7X:
#javac.standalone.bcp =
# pulling from a standalone langtools build:
javac.standalone.bcp = -J-Xbootclasspath/p:${reference.langtools-javac.jar}
javac.deprecation=false
javac.source=1.7
javac.target=1.7
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=-protected
#javadoc.access=protected
javadoc.author=false
javadoc.encoding=
javadoc.noindex=true
javadoc.nonavbar=true
javadoc.notree=true
javadoc.private=false
javadoc.splitindex=false
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
jnlp.codebase.type=local
jnlp.codebase.url=file:${dist.dir}
jnlp.descriptor=application
jnlp.enabled=false
jnlp.offline-allowed=false
jnlp.signed=false
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=JDK_7X
# was on javac.classpath, run.classpath: ${reference.AnonymousClass.jar}
#project.AnonymousClass=../anonk
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${file.reference.test-classes}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-ea -esa ${config.run.jvmargs} ${meth.extra.jvmargs} -Xbootclasspath/p:"${run.classpath}:${libs.junit_4.classpath}" -Dbuild.test.classes.dir=${build.test.classes.dir}
#manual hack: override ${config.run.jvmargs} in ${config}.properties
config.run.jvmargs =
meth.extra.jvmargs = 
#meth.extra.jvmargs = -XX:+UnlockExperimentalVMOptions -XX:-AllowInvokeGeneric
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
# One or more refs might still need fixing:
file.reference.davinci-project-folder.sources.jdk=${file.reference.davinci-project-folder}/sources/jdk
file.reference.davinci-project-folder.sources.langtools=${file.reference.davinci-project-folder}/sources/langtools
reference.langtools-javac.jar=${platforms.JDK_7X.home}/lib/tools.jar
#reference.langtools-javac.jar=${file.reference.openjdk-jdk7-folder}/langtools/dist/lib/javac.jar
#reference.langtools-javac.jar=${file.reference.davinci-project-folder.sources.langtools}/dist/lib/javac.jar
src.src.dir=${file.reference.davinci-project-folder.sources.jdk}/src/share/classes
test.src.dir=test
project.license=openjdk
davinci.patch.name=meth
# JDK_7X = an mlvm build, including JSR 292 javac from langtools, libjvm from hotspot, and rt.jar from jvm
# these should be globally defined in most setups, but are given here locally for completeness:
platforms.JDK_7X.bootclasspath=${platforms.JDK_7X.home}/jre/lib/resources.jar:${platforms.JDK_7X.home}/jre/lib/rt.jar:${platforms.JDK_7X.home}/jre/lib/sunrsasign.jar:${platforms.JDK_7X.home}/jre/lib/jsse.jar:${platforms.JDK_7X.home}/jre/lib/jce.jar:${platforms.JDK_7X.home}/jre/lib/charsets.jar:${platforms.JDK_7X.home}/jre/classes:${platforms.JDK_7X.home}/jre/lib/ext/dnsns.jar:${platforms.JDK_7X.home}/jre/lib/ext/localedata.jar:${platforms.JDK_7X.home}/jre/lib/ext/sunjce_provider.jar:${platforms.JDK_7X.home}/jre/lib/ext/sunpkcs11.jar
platforms.JDK_7X.compiler=modern
platform.java=${platforms.JDK_7X.home}/bin/java
test.tests-from-jdk.dir=${file.reference.davinci-project-folder.sources.jdk}
