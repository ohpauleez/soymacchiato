application.title=InvokeDynamicDemo
application.vendor=jrose
build.classes.dir=${build.dir}/classes
build.indified-classes.dir=${build.dir}/indified-classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/InvokeDynamicDemo.jar
dist.javadoc.dir=${dist.dir}/javadoc
excludes=
includes=**
jar.compress=false
javac.classpath=\
    ${reference.meth.jar}
# Space-separated list of extra javac options
javac.compilerargs=-XDinvokedynamic -Xlint:none -XDallowTransitionalJSR292=${allowTransitionalJSR292} ${javac.standalone.bcp} ${meth.standalone.bcp}
#meth.standalone.bcp =
meth.standalone.bcp = -Xbootclasspath/p:${reference.meth.jar}
# choices: yes, no
allowTransitionalJSR292=no
# assuming full JDK_7X:
javac.standalone.bcp =
# pulling from a standalone langtools build:
#javac.standalone.bcp = -J-Xbootclasspath/p:${reference.langtools-javac.jar}
javac.deprecation=false
javac.source=1.7
javac.target=1.7
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
main.class=Main
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=JDK_7X
file.reference.meth=${file.reference.davinci}/patches/netbeans/meth
reference.meth.jar=${file.reference.meth}/dist/meth.jar
file.reference.davinci.sources.langtools=${file.reference.davinci}/sources/langtools
reference.langtools-javac.jar=${file.reference.davinci.sources.langtools}/dist/lib/javac.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.indified-classes.dir}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-ea -esa -XX:+UnlockExperimentalVMOptions -XX:+EnableInvokeDynamic ${meth.extra.jvmargs} ${meth.standalone.bcp}
meth.extra.jvmargs = -XX:-AllowTransitionalJSR292 -XX:+AllowInvokeForInvokeGeneric
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
# JDK_7X = an mlvm build, including JSR 292 javac from langtools, libjvm from hotspot, and rt.jar from jvm
# these should be globally defined in most setups, but are given here locally for completeness:
platforms.JDK_7X.bootclasspath=${platforms.JDK_7X.home}/jre/lib/resources.jar:${platforms.JDK_7X.home}/jre/lib/rt.jar:${platforms.JDK_7X.home}/jre/lib/sunrsasign.jar:${platforms.JDK_7X.home}/jre/lib/jsse.jar:${platforms.JDK_7X.home}/jre/lib/jce.jar:${platforms.JDK_7X.home}/jre/lib/charsets.jar:${platforms.JDK_7X.home}/jre/classes:${platforms.JDK_7X.home}/jre/lib/ext/dnsns.jar:${platforms.JDK_7X.home}/jre/lib/ext/localedata.jar:${platforms.JDK_7X.home}/jre/lib/ext/sunjce_provider.jar:${platforms.JDK_7X.home}/jre/lib/ext/sunpkcs11.jar
platforms.JDK_7X.compiler=modern
platforms.JDK_7X.home=${file.reference.davinci}/sources/build/bsd-i586
#
# These probably need to be pre-defined, in ../build.properties:
#
file.reference.davinci=${user.home}/Projects/davinci
libs.junit_4.classpath=${user.home}/env/jars/junit-4.1.jar
# e.g., ln -s ...davinci/sources/build/bsd-i586/j2sdk-image ~/env/JAVA7X_HOME
platforms.JDK_7X.home=${user.home}/env/JAVA7X_HOME
