'\" t
.\" @(#)javap.1 1.10 00/06/13 SMI;
.\" Copyright 2004 Sun Microsystems, Inc. All rights reserved.
.\" Copyright 2004 Sun Microsystems, Inc. Tous droits r駸erv駸.
.\" 
'\"macro stdmacro
.TH javap 1 "2006 年 9 月 4 日" "Java SE 6" "ユーザーコマンド"
.SH "名前"
javap \- Java クラスファイル逆アセンブラ
.LP

.LP
.LP
クラスファイルを逆アセンブルします。
.LP
.\" 
.\"  This document was created by saving an HTML file as text
.\"  from the JavaSoft web site:
.\" 
.\" http://java.sun.com/products/jdk/1.2/docs/tooldocs/tools.html
.\" 
.\"  and adding appropriate troff macros.  Because the JavaSoft web site 
.\"  man pages can change without notice, it may be helpful to diff
.\"  files to identify changes other than new functionality. 
.\" 
.SH "形式"
.B  javap
[
.B options
] 
.IR class .\|.\|.
.SH "機能説明"
.IX "Java class file disassembler" "" "Java class file disassembler \(em \fLjavap\fP"
.IX "javap" "" "\fLjavap\fP \(em Java class file disassembler"
.B javap
コマンドは、
Java クラスファイルを逆アセンブルします。
出力内容はオプションで指定します。
オプションを
1
つも指定しないと、
.B javap
は渡されたクラスの
.BR package、
.BR protected、
および 
.B public
フィールドとメソッドを出力します。
.B javap
コマンドの出力先は
.B stdout
です。たとえば、以下のクラス宣言をコンパイルします。
.RS
.nf
\f3
import java.awt.*;
import java.applet.*;

public class DocFooter extends Applet {
		String date;
		String email;

		public void init() {
			resize(500,100);
			date = getParameter("LAST_UPDATED");
			email = getParameter("EMAIL");
		}

		public void paint(Graphics g) {
			g.drawString(date + " by ",100, 15);
			g.drawString(email,290,15);
		}
}
\f1
.fi
.RE
.LP
この場合、
.B javap DocFooter
を実行すると以下の出力が得られます。
.RS
\f3
.nf
Compiled from DocFooter.java
public class DocFooter extends java.applet.Applet {
	java.lang.String date;
	java.lang.String email;
	public void init();
	public void paint(java.awt.Graphics);
	public DocFooter();
}
\f1
.fi
.LP
\f3javap \-c DocFooter\fP を実行すると以下の出力が得られます。
.LP
.RS 3

.LP
.nf
\f3
.fl
Compiled from DocFooter.java
.fl
public class DocFooter extends java.applet.Applet {
.fl
    java.lang.String date;
.fl
    java.lang.String email;
.fl
    public DocFooter();
.fl
    public void init();
.fl
    public void paint(java.awt.Graphics);
.fl
}
.fl

.fl
Method DocFooter()
.fl
   0 aload_0
.fl
   1 invokespecial #1 <Method java.applet.Applet()>
.fl
   4 return
.fl

.fl
Method void init()
.fl
   0 aload_0
.fl
   1 sipush 500
.fl
   4 bipush 100
.fl
   6 invokevirtual #2 <Method void resize(int, int)>
.fl
   9 aload_0
.fl
  10 aload_0
.fl
  11 ldc #3 <String "LAST_UPDATED">
.fl
  13 invokevirtual #4 <Method java.lang.String getParameter(java.lang.String)>
.fl
  16 putfield #5 <Field java.lang.String date>
.fl
  19 aload_0
.fl
  20 aload_0
.fl
  21 ldc #6 <String "EMAIL">
.fl
  23 invokevirtual #4 <Method java.lang.String getParameter(java.lang.String)>
.fl
  26 putfield #7 <Field java.lang.String email>
.fl
  29 return
.fl

.fl
Method void paint(java.awt.Graphics)
.fl
   0 aload_1
.fl
   1 new #8 <Class java.lang.StringBuffer>
.fl
   4 dup
.fl
   5 invokespecial #9 <Method java.lang.StringBuffer()>
.fl
   8 aload_0
.fl
   9 getfield #5 <Field java.lang.String date>
.fl
  12 invokevirtual #10 <Method java.lang.StringBuffer append(java.lang.String)>
.fl
  15 ldc #11 <String " by ">
.fl
  17 invokevirtual #10 <Method java.lang.StringBuffer append(java.lang.String)>
.fl
  20 invokevirtual #12 <Method java.lang.String toString()>
.fl
  23 bipush 100
.fl
  25 bipush 15
.fl
  27 invokevirtual #13 <Method void drawString(java.lang.String, int, int)>
.fl
  30 aload_1
.fl
  31 aload_0
.fl
  32 getfield #7 <Field java.lang.String email>
.fl
  35 sipush 290
.fl
  38 bipush 15
.fl
  40 invokevirtual #13 <Method void drawString(java.lang.String, int, int)>
.fl
  43 return
.fl
\fP
.fi
.RE

.LP
.SH "オプション"
.LP

.LP
.TP 3
\-help 
\f3javap\fP のヘルプメッセージを出力します。
.TP 3
\-l 
行番号と局所変数テーブルを表示します。
.TP 3
\-b 
JDK 1.1 の \f3javap\fP との下位互換性を保証します。
.TP 3
\-public 
public クラスおよびメンバだけを表示します。
.TP 3
\-protected 
protected および public のクラスとメンバだけを表示します。
.TP 3
\-package 
package、protected、および public のクラスとメンバだけを表示します。これはデフォルトの設定です。
.TP 3
\-private 
すべてのクラスとメンバを表示します。
.TP 3
\-Jflag 
ランタイムシステムに直接 \f2flag\fP を渡します。使用例を次に示します。
.RS 3

.LP
.nf
\f3
.fl
javap \-J\-version
.fl
javap \-J\-Djava.security.manager \-J\-Djava.security.policy=MyPolicy MyClassName
.fl
\fP
.fi
.RE
.TP 3
\-s 
内部の型シグニチャーを出力します。
.TP 3
\-c 
クラスの各メソッドのために逆アセンブルされるコード、すなわち Java バイトコードから成る命令を表示します。これらは
.fi
http://java.sun.com/docs/books/vmspec/
の
.na
「\f2Java Virtual Machine Specification\fP」にドキュメント化されています。
.TP 3
\-verbose 
メソッドのスタックサイズ、および \f2locals\fP と \f2args\fP の数を出力します。
.TP 3
\-classpath path 
\f3javap\fP がクラスを探すために使用するパスを指定します。デフォルトまたは CLASSPATH 環境変数設定を上書きします。ディレクトリはコロンで分割します。したがって、\f2path\fP の一般形式は次のようになります。
.nf
\f3
.fl
   .:<your_path>
.fl
\fP
.fi
次に例を示します。
.nf
\f3
.fl
.:/home/avh/classes:/usr/local/java/classes
.fl
\fP
.fi
.TP 3
\-bootclasspath path 
ブートストラップクラスをロードするパスを指定します。ブートストラップクラスは、デフォルトでは \f2jre/lib/rt.jar\fP および他のいくつかの JAR ファイル にある、コア Java プラットフォームを実装するクラスです。
.TP 3
\-extdirs dirs 
インストールされた拡張機能を検索する場所をオーバーライドします。拡張機能は、デフォルトでは \f2java.ext.dirs\fP にあります。
.LP
.SH "環境変数"
.TP 15
.B CLASSPATH
ユーザ定義クラスへのパスをシステムに通知するために使用します。
複数のディレクトリを指定する場合はコロンで区切ります。
以下に例を示します。
.sp 1n
.RS 10
.B .:/home/avh/classes:/usr/local/java/classes
.RE
.SH "関連項目"
.LP

.LP
.LP
javac、java、jdb、javah、javadoc
.LP

.LP
 
