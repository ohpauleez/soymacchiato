'\" t
.\" @(#)wsimport.1  SMI;
.\"  Copyright (C) 2006 Sun Microsystems, Inc. All Rights Reserved.
.\" `
.TH wsimport 1 "2006 年 9 月 4 日" "Java SE 6" "ユーザーコマンド"
." Generated by html2man

.LP
.SH 名前
wsimport \- JAX\-WS 2.0 ベータ
.LP
.SH "形式"
.LP

.LP
.nf
\f3
.fl
wsimport [options] <wsdl>
.fl
\fP
.fi

.LP
.SH "機能説明"
.LP
.LP
\f2wsimport\fP ツールは、次のような JAX-WS ポータブルアーティファクトを生成します。
.LP
.RS 3
.TP 2
o
サービスエンドポイントインタフェース (SEI) 
.TP 2
o
サービス 
.TP 2
o
wsdl:fault からマップされる例外クラス (存在する場合)
.TP 2
o
応答 wsdl:message から派生する非同期応答 Bean (存在する場合)
.TP 2
o
JAX-B が生成する値タイプ (スキーマの型からマップされた Java クラス)
.RE

.LP
.LP
これらのアーティファクトは、WSDL ドキュメント、スキーマドキュメント、およびエンドポイント実装とともに WAR ファイル内にパッケージ化して配備することができます。
.br

.LP
.LP
wsimport ツールを起動するには、コマンド行スクリプト wsimport.sh (Unix) または wsimport.bat (Windows) を使用します。WSDL をインポートおよびコンパイルするための Ant タスクも存在しています。詳しくは後述の説明を参照してください。
.br

.LP
.SH "オプション"
.LP
.LP
次の表に、\f2wsimport\fP のオプションを示します。
.br

.LP
.LP
表 1\-1 wsimport のオプション
.LP
.LP
.TS
center;
cbp-1 cbp-1
li l.
オプション	説明
_
-d <directory>	生成される出力ファイルを格納する場所を指定します
-b <path>	T{
外部の JAX-WS または JAXB バインディングファイルを指定します (<file> ごとに -b が必要となる)
T}	
-catalog	T{
外部エンティティ参照を解決するためのカタログファイルを指定します。TR9401、XCatalog、OASIS XML Catalog の各形式がサポートされています。「XML Entity and URI Resolvers」ドキュメントをお読みになるか、wsimport_catalog サンプルを参照してください。
T}	
-extension	T{
ベンダー拡張 (仕様で規定されていない機能) を許可します。拡張を使用すると、アプリケーションの移植性が失われたり、ほかの実装との相互運用が行えなくなる可能性があります
T}	
-help	ヘルプを表示します
-httpproxy:<host>:<port>	T{
HTTP プロキシサーバーを指定します (デフォルトのポートは 8080)
T}	
-keep	生成されたファイルを保持します
-p	T{
このコマンド行オプション経由でターゲットパッケージを指定した場合、その指定内容は、パッケージ名に対するすべての WSDL/スキーマバインディングカスタマイズや、 仕様で規定されているデフォルトのパッケージ名アルゴリズムよりも優先されます
T}	
-s <directory>	T{
生成されるソースファイルを格納する場所を指定します
T}	
-verbose	T{
コンパイラが実行している処理に関するメッセージを出力します
T}	
-version	バージョン情報を出力します
-wsdllocation <location>	T{
@WebService.wsdlLocation と @WebServiceClient.wsdlLocation の値
T}	
.TE
.if \n-(b.=0 .nr c. \n(.c-\n(d.-54

.LP
.LP
\f2\-b\fP オプションを使って、複数の JAX-WS および JAXB バインディングファイルを指定できます。 
これらのファイルを使って、パッケージ名や Bean 名など、さまざまなカスタマイズが可能です。 
JAX-WS および JAXB バインディングファイルの詳細については、カスタマイズマニュアルを参照してください。
.br

.LP
.SS 
Ant タスク
.LP
.LP
\f2wsimport\fP ツールには、このツール用の Ant タスクが付属しています。この Ant タスクがサポートする属性や要素を、次に示します。
.br

.LP
.nf
\f3
.fl
   <wsimport           
.fl
      wsdl="..."      
.fl
      destdir="directory for generated class files"
.fl
      sourcedestdir="directory for generated source files"
.fl
      keep="true|false"
.fl
      extension="true|false"
.fl
      verbose="true|false"
.fl
      version="true|false"
.fl
      wsdlLocation="..."
.fl
      catalog="catalog file"
.fl
      package="package name"
.fl
      <binding dir="..." includes="..." />
.fl
  </wsimport>
.fl
\fP
.fi

.LP
.LP
.TS
center;
cbp-1 cbp-1 cbp-1
li l l
li l li.
属性	説明	コマンド行
_
wsdl	WSDL file	WSDL
destdir	生成される出力クラスを格納する場所を指定します	-d
sourcedestdir	T{
生成されたソースファイルの格納場所を指定します。このオプションの指定時には keep もオンになります。
T}	-s
keep	T{
生成されたファイルを保持します。sourcedestdir オプション指定時にオンになります
T}	-keep
verbose	T{
コンパイラが実行している処理に関するメッセージを出力します
T}	-verbose
binding	T{
外部の JAX-WS または JAXB バインディングファイルを指定します
T}	-b
extension	T{
ベンダー拡張 (仕様で規定されていない機能) を許可します。拡張を使用すると、アプリケーションの移植性が失われたり、ほかの実装との相互運用が行えなくなる可能性があります
T}	-extension
wsdllocation	T{
このオプション経由 で 渡 さ れたWSDL の URI は、生 成 された SEIおよびサービスインタフェース上の@WebService.wsdlLocationお     よ     び@WebServiceClient.wsdlLocation注釈要素の値を設定するために使用されます。
T}	-wsdllocation
catalog	T{
外部エンティティ参照を解決するためのカタログファイルを指定します。TR9401、XCatalog、OASIS XML Catalog の各形式がサポートされています。さらに、Ant xmlcatalog タイプを使ってエンティティを解決することもできます。wsimport_catalog サンプルを参照してください。
T}	-catalog
package	ターゲットパッケージを指定します	-p
.TE
.if \n-(b.=0 .nr c. \n(.c-\n(d.-63

.LP
.LP
\f2binding\fP 属性は、
.na
\f2Path\-like Structures\fP
.fi
(http://ant.apache.org/manual/using.html#path) であり、それぞれ入れ子になった \f2<binding>\fP 要素を使って設定することもできます。このタスクを使用するには、次の \f2<taskdef>\fP 要素をプロジェクトに追加しておく必要があります。
.LP
.nf
\f3
.fl
  <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
.fl
      <classpath path="jaxws.classpath"/>
.fl
  </taskdef>
.fl
\fP
.fi

.LP
.LP
ここで、\f2jaxws.classpath\fP は、JAX\-WS ツールが必要とするクラスのリストを含む、ビルド環境内の別の場所に定義された
.na
\f2Path\-like Structure\fP
.fi
(http://ant.apache.org/manual/using.html#path) への参照です。
.LP
.SH "例"
.LP
.nf
\f3
.fl
  <wsimport
.fl
      destdir="${build.classes.home}"
.fl
      debug="true"
.fl
      wsdl="AddNumbers.wsdl"
.fl
      binding="custom.xml"/>
.fl
\fP
.fi

.LP
.LP
上の例では、\f2AddNumbers.wsdl\fP のクライアント側アーティファクトを生成し、\f2custom.xml\fP カスタマイズファイルに基づいて \f2${build.classes.home}\fP ディレクトリ内に \f2.class\fP ファイルを格納しています。使用されるクラスパスは \f2xyz.jar\fP であり、デバッグ情報がオンの状態でコンパイルが実行されます。
.LP
.nf
\f3
.fl
  <wsimport
.fl
      keep="true"
.fl
      sourcedestdir="${source.dir}"
.fl
      destdir="${build.classes.home}"
.fl
      wsdl="AddNumbers.wsdl">
.fl
      <binding dir="${basedir}/etc" includes="custom.xml"/>
.fl
  </wsimport>
.fl
\fP
.fi

.LP
.LP
上の例では、\f2AddNumbers.wsdl\fP のポータブルアーティファクトを生成し、\f2${source.dir}\fP ディレクトリ内に \f2.java\fP ファイルを格納し、\f2${build.classes.home}\fP ディレクトリ内に \f2.class\fP ファイルを格納しています。
.LP
.SH "注意"
.LP
.LP
変更または削除された wsimport の Ant 属性の概要
.LP
\f3base\fP が \f3destdir\fP で置き換えられました
.br

.LP
.br

.LP
\f3sourceBase\fP が \f3sourcedestdir\fP で置き換えられました
.br

.LP
.br

.LP
\f3wsdlFile\fP が \f3wsdl\fP で置き換えられました
.br
.br
\f3httpProxy\fP が削除されました。代わりに、Ant の setproxy タスクを使ってプロキシ構成を行ってください。
.br
.br
\f3version\fP が削除されました
.br

.LP

.LP
 
